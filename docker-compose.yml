version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: vamsasetu-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/vamsasetu123
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - vamsasetu-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: vamsasetu-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vamsasetu
      - POSTGRES_USER=vamsasetu
      - POSTGRES_PASSWORD=vamsasetu123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vamsasetu-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: vamsasetu-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vamsasetu-network

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vamsasetu-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=vamsasetu123
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/vamsasetu
      - POSTGRES_USERNAME=vamsasetu
      - POSTGRES_PASSWORD=vamsasetu123
      - REDIS_URL=redis://redis:6379
    depends_on:
      - neo4j
      - postgres
      - redis
    networks:
      - vamsasetu-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vamsasetu-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - vamsasetu-network

volumes:
  neo4j_data:
  neo4j_logs:
  postgres_data:
  redis_data:

networks:
  vamsasetu-network:
    driver: bridge
